package edu.ufl.bmi.ontology;

import java.io.FileReader;
import java.io.LineNumberReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.FileOutputStream;
import java.util.Iterator;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Set;
import java.util.Map;
import java.util.ArrayList;
import java.util.Optional;
import java.util.regex.Pattern;
import java.util.stream.Stream;

import org.semanticweb.owlapi.apibinding.OWLManager;
import org.semanticweb.owlapi.model.OWLOntologyManager;
import org.semanticweb.owlapi.model.OWLDataFactory;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyCreationException;
import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLClassAssertionAxiom;
import org.semanticweb.owlapi.model.OWLLiteral;
import org.semanticweb.owlapi.model.OWLAnnotationProperty;
import org.semanticweb.owlapi.model.OWLAnnotationValue;
import org.semanticweb.owlapi.model.OWLObjectProperty;
import org.semanticweb.owlapi.model.OWLAnnotation;
import org.semanticweb.owlapi.model.OWLAnnotationAssertionAxiom;
import org.semanticweb.owlapi.model.OWLObjectPropertyAssertionAxiom;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;

import edu.ufl.bmi.misc.IriLookup;

public class GeoNamesAdminLevelProcessing {

    static String countryIso;
    static IriLookup iriMap;
    static String owlBase;
    static String inputFileName;

    static IRI countryIri;

    static OWLOntology[] ontologies;  //one for each admin level

    public static void main(String[] args) {
	try {
	    readConfigurationFile(args[0]);
	} catch (IOException ioe) {
	    System.out.println(ioe);
	    ioe.printStackTrace();
	}
    }

    public static void readConfigurationFile(String fName) throws IOException {
	FileReader fr = new FileReader(fName);
	LineNumberReader lnr = new LineNumberReader(fr);
	String line;
	while((line=lnr.readLine())!=null) {
	    String[] flds = line.split(Pattern.quote("="));
	    if (flds[0].equals("countrycode")) {
		countryIso = flds[1];
	    } else if (flds[0].equals("input")) {
		inputFileName=flds[1];
	    } else if (flds[0].equals("owlpurlbase")) {
		owlBase = flds[1];
	    } else if (flds[0].equals("countryiri")) {
		countryIri = IRI.create(flds[1]);
	    } else {
		System.err.println("don't know what " + flds[0] + " is. Ignoring...");
	    }
	}
    }

}